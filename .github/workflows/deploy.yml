name: 🚀 Deploy to GitHub Pages

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    name: 🌐 Lint, Test, Build & Deploy
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pages: write
      id-token: write

    steps:
      # Étape 1 : Récupération du code source
      - name: 🛎️ Checkout repository
        uses: actions/checkout@v4

      # Étape 2 : Configuration de l’environnement Node.js
      - name: 🟦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      # Étape 3 : Mise en cache des dépendances pour accélérer les builds
      - name: ♻️ Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Étape 4 : Installation des dépendances du projet
      - name: 📦 Install dependencies
        run: npm ci

      # Étape 5 : Détection automatique du chemin de base pour Vite en fonction du dépôt
      - name: 🔁 Set VITE_BASE_PATH based on repository
        run: |
          if [[ "${{ github.repository }}" == "ben-yakoub/rif-raw-fashion" ]]; then
            echo "VITE_BASE_PATH=/rif-raw-fashion/" >> $GITHUB_ENV
          elif [[ "${{ github.repository }}" == "benmed00/lucid-web-craftsman" ]]; then
            echo "VITE_BASE_PATH=/lucid-web-craftsman/" >> $GITHUB_ENV
          else
            echo "VITE_BASE_PATH=/" >> $GITHUB_ENV
          fi

      # Étape 6 : Linting du code pour détecter les erreurs de style et de qualité
      - name: 🧹 Run Linter
        run: npm run lint  # Vérifie la qualité du code via ESLint (configuré avec eslint.config.js)

      # Étape 7 : Lancement des tests unitaires
      - name: ✅ Run Tests
        run: npm run test -- --run

      # Étape 8 : Construction du site pour production
      - name: 🔧 Build project
        run: npm run build
        env:
          VITE_BASE_PATH: ${{ env.VITE_BASE_PATH }}

      # Étape 9 : Upload des fichiers statiques générés dans dist/
      - name: 📤 Upload static files
        uses: actions/upload-pages-artifact@v3
        with:
          name: web-app
          path: ./dist

      # Étape 10 : Déploiement sur GitHub Pages 🚀
      - name: 🚀 Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
        with:
          artifact_name: web-app
